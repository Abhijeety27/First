<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-09-27T23:02:08 IST" name="RegressionSuite" finished-at="2022-09-27T23:03:28 IST" duration-ms="79956">
    <groups>
    </groups>
    <test started-at="2022-09-27T23:02:08 IST" name="ChromeTest" finished-at="2022-09-27T23:03:28 IST" duration-ms="79956">
      <class name="starhealthTest.StarhealthTest">
        <test-method is-config="true" signature="openbrowser(java.lang.String)[pri:0, instance:starhealthTest.StarhealthTest@2f7298b]" started-at="2022-09-27T23:02:08 IST" name="openbrowser" finished-at="2022-09-27T23:02:09 IST" duration-ms="1494" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbrowser -->
        <test-method is-config="true" signature="objectsofPom()[pri:0, instance:starhealthTest.StarhealthTest@2f7298b]" started-at="2022-09-27T23:02:09 IST" name="objectsofPom" finished-at="2022-09-27T23:02:09 IST" duration-ms="33" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- objectsofPom -->
        <test-method is-config="true" signature="callmethod()[pri:0, instance:starhealthTest.StarhealthTest@2f7298b]" started-at="2022-09-27T23:02:09 IST" name="callmethod" finished-at="2022-09-27T23:02:46 IST" duration-ms="36934" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callmethod -->
        <test-method signature="buttoncheck1()[pri:0, instance:starhealthTest.StarhealthTest@2f7298b]" started-at="2022-09-27T23:02:46 IST" name="buttoncheck1" finished-at="2022-09-27T23:02:47 IST" duration-ms="911" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buttoncheck1 -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:starhealthTest.StarhealthTest@2f7298b]" started-at="2022-09-27T23:02:47 IST" name="aftermethod" finished-at="2022-09-27T23:02:47 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=buttoncheck1 status=SUCCESS method=StarhealthTest.buttoncheck1()[pri:0, instance:starhealthTest.StarhealthTest@2f7298b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="callmethod()[pri:0, instance:starhealthTest.StarhealthTest@2f7298b]" started-at="2022-09-27T23:02:47 IST" name="callmethod" finished-at="2022-09-27T23:03:24 IST" duration-ms="36953" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callmethod -->
        <test-method signature="chechbox()[pri:0, instance:starhealthTest.StarhealthTest@2f7298b]" started-at="2022-09-27T23:03:24 IST" name="chechbox" finished-at="2022-09-27T23:03:24 IST" duration-ms="5" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [false] but found [true]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at starhealthTest.StarhealthTest.chechbox(StarhealthTest.java:118)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:425)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:66)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chechbox -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:starhealthTest.StarhealthTest@2f7298b]" started-at="2022-09-27T23:03:24 IST" name="aftermethod" finished-at="2022-09-27T23:03:27 IST" duration-ms="3341" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chechbox status=FAILURE method=StarhealthTest.chechbox()[pri:0, instance:starhealthTest.StarhealthTest@2f7298b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:starhealthTest.StarhealthTest@2f7298b]" started-at="2022-09-27T23:03:27 IST" name="afterTest" finished-at="2022-09-27T23:03:28 IST" duration-ms="232" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- starhealthTest.StarhealthTest -->
    </test> <!-- ChromeTest -->
  </suite> <!-- RegressionSuite -->
</testng-results>
